version: "3.8"

services:
  # ✅ PostgreSQL 데이터베이스
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: myuser            # DB 사용자명
      POSTGRES_PASSWORD: mypass        # DB 비밀번호
      POSTGRES_DB: counterdb           # 생성할 데이터베이스 이름
    volumes:
      - pgdata:/var/lib/postgresql/data # 로컬 볼륨을 사용하여 데이터 영구 저장
    ports:
      - "5432:5432"                    # 외부에서 접근 가능하도록 포트 연결

  # ✅ Flask 백엔드 API 서버
  backend:
    build: ./backend                   # backend 디렉토리의 Dockerfile 기준으로 이미지 빌드
    # wait-for-it.sh 스크립트로 DB가 준비될 때까지 대기 후 main.py 실행
    command: ["./wait-for-it.sh", "db:5432", "--", "python", "main.py"]
    # wait-for-it.sh 파일을 backend 디렉토리에 위치시켜야 함 (https://github.com/vishnubob/wait-for-it)
    # volumes:
    #   - ./backend:/app                 # 로컬 코드 변경을 컨테이너에 반영
    ports:
      - "5000:5000"                    # Flask 서버 외부 접근 포트
    depends_on:
      - db                             # DB가 먼저 실행되도록 설정

  # ✅ React 프론트엔드
  frontend:
    build: ./frontend                  # frontend 디렉토리의 Dockerfile 기준으로 빌드
    # volumes:
    #   - ./frontend:/app                # 프론트 코드 로컬 동기화
    ports:
      - "3000:3000"                    # 웹브라우저에서 접근할 포트
    depends_on:
      - backend                        # 백엔드가 먼저 실행되어야 함

# ✅ PostgreSQL 데이터 저장을 위한 볼륨
volumes:
  pgdata:
